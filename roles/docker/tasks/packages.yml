---
# Tasks to install the docker package.
- name: delete the old 'docker.list' file
  file:
    path: /etc/apt/sources.list.d/docker.list
    state: absent

- name: ensure that the older repositories are uninstalled
  apt:
    pkg: "{{ docker_older_repositories }}"
    state: absent
    purge: yes
    update_cache: yes

- name: ensure that the latest dependent packages are installed
  apt:
    pkg: "{{ docker_dependencies }}"
    state: latest
    update_cache: yes

- name: add GPG key from '{{ docker_apt_key_server }}'
  apt_key:
    url: "{{ docker_apt_key_server }}"
    id: "{{ docker_apt_key_id }}"
    
- name: get the release name
  command: lsb_release -cs
  register: lsbrelease

- name: add the APT repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ lsbrelease.stdout }} stable"
    update_cache: yes

- name: ensure that the latest '{{ docker_pkg_name }}' package is installed
  apt:
    pkg: "{{ docker_pkg_name }}"
    state: latest
    update_cache: yes

# Install docker-compose
- name: get the OS name
  command: uname -s
  register: unames

- name: get the OS version
  command: uname -m
  register: unamem

- name: download the latest 'docker-compose' version
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ unames.stdout }}-{{ unamem.stdout }}"
    dest: "{{ docker_compose_path }}"
    owner: root
    group: root
    mode: "0755"
    force: yes

# Stop the docker daemon.
- name: stop docker
  service:
    name: "{{ docker_service_name }}"
    state: stopped
    enabled: yes

# Redefine the docker lib directory
- name: create the docker lib directory at '{{ docker_lib_directory }}'
  file:
    path: "{{ docker_lib_directory }}"
    state: directory
    mode: 0711
    owner: root
    group: root

- name: update the docker lib directory to '{{ docker_lib_directory }}'
  replace:
    path: /lib/systemd/system/docker.service
    regexp: 'ExecStart=/usr/bin/dockerd -H fd://'
    replace: 'ExecStart=/usr/bin/dockerd -g {{ docker_lib_directory }} -H fd://'
  register: newdockerlibdirectory

- name: copy the docker files to '{{ docker_lib_directory }}'
  command: rsync -aqxP /var/lib/docker/ {{ docker_lib_directory }}
  when: newdockerlibdirectory.changed

# Reload and start the docker daemon.
- name: reload systemctl
  command: systemctl daemon-reload
  when: newdockerlibdirectory.changed

- name: start docker
  service:
    name: "{{ docker_service_name }}"
    state: started
    enabled: yes
