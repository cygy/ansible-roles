---
# Tasks to install the docker package.
- name: add GPG key
  apt_key:
    keyserver: "{{ docker_apt_key_server }}"
    id: "{{ docker_apt_key_id }}"

- name: copy 'docker.list' file (main)
  copy:
    src: files/main.list
    dest: "{{ docker_apt_source_path }}"
    backup: yes
  when: docker_install_experimental_version == 0

- name: copy 'docker.list' file (experimental)
  copy:
    src: files/experimental.list
    dest: "{{ docker_apt_source_path }}"
    backup: yes
  when: docker_install_experimental_version == 1

- name: update the system
  apt:
    update_cache: yes
    upgrade: dist

- name: ensure that the older repositories are uninstalled
  apt:
    pkg: "{{ item }}"
    state: absent
    purge: yes
  with_items: "{{ docker_older_repositories }}"

- name: ensure that the latest dependent packages of '{{ docker_pkg_name }}' are installed
  apt:
    pkg: "{{ item }}"
    state: latest
  with_items: "{{ docker_dependencies }}"

- name: ensure that the latest '{{ docker_pkg_name }}' package is installed
  apt:
    pkg: "{{ docker_pkg_name }}"
    state: latest
    update_cache: yes

# Install the package dependencies for Ansible docker module.
- name: ensure that the latest python packages are installed
  apt:
    pkg: "{{ item.name }}"
    state:  "{{ item.state }}"
  with_items:
    - { name: python, state: latest }
    - { name: python-setuptools, state: latest }
    - { name: python-pip, state: absent }

- name: ensure that the dependent packages are installed via easy_install
  easy_install:
    name: "{{ item.name }}"
    state:  "{{ item.state }}"
  with_items:
    - { name: pip, state: latest }

- name: ensure that the dependent packages are installed via pip
  pip:
    name: "{{ item.name }}"
    state:  "{{ item.state }}"
  with_items:
    - { name: docker-py==1.9.0, state: present }

# Install docker-compose
- name: get the OS name
  command: uname -s
  register: unames

- name: get the OS version
  command: uname -m
  register: unamem

- name: ensure that 'docker-compose' is installed
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ unames.stdout }}-{{ unamem.stdout }}"
    dest: "{{ docker_compose_path }}"
    owner: root
    group: root
    mode: "0755"

# Start the docker daemon.
- name: restart docker
  service:
    name: "{{ docker_service_name }}"
    state: restarted
    enabled: yes
